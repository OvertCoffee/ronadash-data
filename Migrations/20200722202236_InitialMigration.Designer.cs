// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ronadash_data.Models;

namespace ronadash_data.Migrations
{
    [DbContext(typeof(RonaContext))]
    [Migration("20200722202236_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ronadash_data.Models.County", b =>
                {
                    b.Property<int>("CountyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Active")
                        .HasColumnType("integer");

                    b.Property<string>("Combined_Key")
                        .HasColumnType("text");

                    b.Property<int>("Confirmed")
                        .HasColumnType("integer");

                    b.Property<string>("Country_Region")
                        .HasColumnType("text");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer");

                    b.Property<string>("FIPS")
                        .HasColumnType("text");

                    b.Property<string>("Incidence_Rate")
                        .HasColumnType("text");

                    b.Property<DateTime>("Last_Update")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Lat")
                        .HasColumnType("text");

                    b.Property<string>("Long")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Province_State")
                        .HasColumnType("text");

                    b.Property<int>("Recovered")
                        .HasColumnType("integer");

                    b.HasKey("CountyId");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("ronadash_data.Models.DbState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Active")
                        .HasColumnType("integer");

                    b.Property<int>("Confirmed")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Counties")
                        .HasColumnType("integer[]");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Last_Update")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Province_State")
                        .HasColumnType("text");

                    b.Property<int>("Recovered")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("ronadash_data.Models.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Active")
                        .HasColumnType("integer");

                    b.Property<double?>("Case_Fatality_Ratio")
                        .HasColumnType("double precision");

                    b.Property<string>("Combined_Key")
                        .HasColumnType("text");

                    b.Property<int?>("Confirmed")
                        .HasColumnType("integer");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<int?>("Deaths")
                        .HasColumnType("integer");

                    b.Property<string>("FIPS")
                        .HasColumnType("text");

                    b.Property<double?>("Incidence_Rate")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Last_Update")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double?>("Lat")
                        .HasColumnType("double precision");

                    b.Property<double?>("Long")
                        .HasColumnType("double precision");

                    b.Property<string>("Province_State")
                        .HasColumnType("text");

                    b.Property<int?>("Recovered")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Country");

                    b.HasIndex("County");

                    b.HasIndex("Last_Update");

                    b.HasIndex("Province_State");

                    b.HasIndex("Country", "Province_State", "County", "Last_Update")
                        .IsUnique();

                    b.ToTable("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
